name: build

on:
  push:
    tags:
      - 'v*'


permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout code
        uses: actions/checkout@v4

      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run build with Gradle wrapper
        run: ./gradlew assembleRelease -PIS_SO_BUILD=false

      - name: Sign app APK
        id: sign_app
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          alias: ${{ secrets.ALIAS }}
          signingKeyBase64: ${{ secrets.KEYSTORE }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ALIAS_PASSWORD }}
        env:
          # override default build-tools version (29.0.3) -- optional
          BUILD_TOOLS_VERSION: "34.0.0"

#      - name: Delete Release
#      - uses: dev-drprasad/delete-tag-and-release@v1.1
#        with:
#          tag_name: ${{ github.ref }}
#          delete_release: true 
#          github_token: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Delete Older Releases
        uses: nikhilbadyal/ghaction-rm-releases@v0.0.5
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_PATTERN: 'v*'          
        
      - name: Generate release tag
        id: tag
        run: |
          echo "release_tag=$(date +'%Y.%m.%d-%H%M')" >> $GITHUB_OUTPUT
          touch release.txt
          echo "status=success" >> $GITHUB_OUTPUT
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          release_name: Release ${{ steps.tag.outputs.release_tag }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.sign_app.outputs.signedReleaseFile }}
          asset_name: my-tv-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive
